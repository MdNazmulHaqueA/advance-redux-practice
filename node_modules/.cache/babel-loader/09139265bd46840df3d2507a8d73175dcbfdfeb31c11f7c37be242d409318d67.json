{"ast":null,"code":"const {\n  createSlice\n} = require('@reduxjs/toolkit');\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const item = action.payload;\n      const existingItem = state.items.find(item => item.id === item.id);\n    },\n    removeItemFromCart(state, action) {}\n  }\n});\nexport const uiActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","require","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","item","payload","existingItem","find","id","removeItemFromCart","uiActions","actions"],"sources":["Z:/ud55hr/advance-redux-practice/src/store/cart-slice.js"],"sourcesContent":["const { createSlice } = require('@reduxjs/toolkit');\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    totalAmount: 0\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const item = action.payload;\r\n      const existingItem = state.items.find(item => item.id === item.id);\r\n    },\r\n    removeItemFromCart(state, action) {}\r\n  }\r\n});\r\n\r\nexport const uiActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACI,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IACpE,CAAC;IACDC,kBAAkBA,CAACP,KAAK,EAAEC,MAAM,EAAE,CAAC;EACrC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,SAAS,GAAGhB,SAAS,CAACiB,OAAO;AAE1C,eAAejB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}